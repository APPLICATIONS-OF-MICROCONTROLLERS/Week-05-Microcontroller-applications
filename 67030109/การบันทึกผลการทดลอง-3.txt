ผลลัพธ์การรัน

ESP32 Cache Performance Analysis
================================
Array size: 4096 elements (16 KB)
Iterations per test: 100
Test runs: 5

Initializing test arrays...
PSRAM not available, using internal memory

=== Test 1: Sequential vs Random Access (Internal SRAM) ===
SRAM Sequential Access: 11474 μs (sum=3609780224)
SRAM Random Access: 11706 μs (sum=3609780224)
SRAM Performance Ratio (Random/Sequential): 1.02x

=== Test 2: External Memory Access ===
External Sequential Access: 36082 μs (sum=3609780224)
External Random Access: 36410 μs (sum=3609780224)
External Memory Performance Ratio: 1.01x

Memory Type Comparison (Sequential Access):
External/Internal Speed Ratio: 3.14x

=== Test 3: Stride Access Patterns ===
Stride 1 (stride 1): 10628 μs (sum=3609780224)
Stride 2 (stride 2): 7092 μs (sum=1801306112)
Stride 4 (stride 4): 2727 μs (sum=3044552704)
Stride 8 (stride 8): 1417 μs (sum=3666176000)
Stride 16 (stride 16): 804 μs (sum=1829504000)

Stride Analysis:
Stride 2/1 ratio: 0.67x
Stride 4/1 ratio: 0.26x
Stride 8/1 ratio: 0.13x
Stride 16/1 ratio: 0.08x

Cache performance analysis complete!


Table 3.1: Cache Performance Results
| Test Type  | Memory Type     | Time (μs) | Ratio vs Sequential |
| ---------- | --------------- | --------- | ------------------- |
| Sequential | Internal SRAM   | 11474     | 1.00x               |
| Random     | Internal SRAM   | 11706     | 1.02x               |
| Sequential | External Memory | 36082     | 3.14x               |
| Random     | External Memory | 36410     | 3.17x               |

Table 3.2: Stride Access Performance
| Stride Size | Time (μs) | Ratio vs Stride 1 |
| ----------- | --------- | ----------------- |
| 1           | 10628     | 1.00x             |
| 2           | 7092      | 0.67x             |
| 4           | 2727      | 0.26x             |
| 8           | 1417      | 0.13x             |
| 16          | 804       | 0.08x             |


คำถามวิเคราะห์
1.Cache Efficiency: ทำไม sequential access เร็วกว่า random access?
    เพราะ cache และ prefetcher ทำงานได้ดีเมื่อข้อมูลถูกอ่านแบบต่อเนื่อง (sequential)
    CPU สามารถโหลดข้อมูลล่วงหน้าทีละ block (เช่น 32–64 bytes)
    ถ้าเป็น random access แต่ละครั้งต้องโหลด block ใหม่ เกิด cache miss บ่อย ช้ากว่า

2.Memory Hierarchy: ความแตกต่างระหว่าง internal SRAM และ external memory คืออะไร?
    Internal SRAM  เร็ว, อยู่บนชิป, ขนาดเล็ก (~520 KB)
    External Memory  ช้า, อยู่นอกชิป, ขนาดใหญ่ (MB ระดับ)

3.Stride Patterns: stride size ส่งผลต่อ performance อย่างไร?
    • Stride = ระยะห่างระหว่างตำแหน่ง memory ที่อ่าน/เขียนในแต่ละรอบ
    • Stride เล็ก (เช่น 1, 2, 4 bytes) → เข้ากับ cache line → cache hit สูง → เร็ว
    • Stride ใหญ่ (เช่น ข้ามหลาย KB) → ข้าม cache line บ่อย → cache miss เยอะ → ช้า
    • ถ้า stride ใหญ่กว่าขนาด cache line (เช่น >64 bytes) → performance ตกลงอย่างชัดเจน
